version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7.1
  slack: circleci/slack@4.12.5

parameters:
  alerts-slack-channel:
    type: string
    default: dps_alerts_security

  releases-slack-channel:
    type: string
    default: dps-releases

  node-version:
    type: string
    default: 18.17-browsers

  python-version:
    type: string
    default: '3.10'

executors:
  # same as hmpps/node_redis executor with the addition of minio containers
  integration-tests:
    docker:
      - image: cimg/node:18.17-browsers
      - image: cimg/redis:7.0
      - image: minio/minio
        command: server --address :9000 /data
        environment:
          MINIO_ROOT_USER: incentives
          MINIO_ROOT_PASSWORD: incentives
          MINIO_SITE_REGION: eu-west-1
    resource_class: medium
    working_directory: ~/app

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install -g npm@9.2.0
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Build application
          command: npm run build
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build
            - dist
            - .cache/Cypress

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.35.0/wiremock-jre8-standalone-2.35.0.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - hmpps/install_aws_cli
      - run:
          name: Provision minio bucket
          command: |
            aws --endpoint-url http://localhost:9000 s3 mb s3://incentives
            aws --endpoint-url http://localhost:9000 s3 sync server/testData/s3Bucket s3://incentives/
            aws --endpoint-url http://localhost:9000 s3 ls s3://incentives
          environment:
            AWS_ACCESS_KEY_ID: incentives
            AWS_SECRET_ACCESS_KEY: incentives
            AWS_DEFAULT_REGION: eu-west-1
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: Run integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          helm_timeout: 7m
          jira_update: true
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          helm_timeout: 7m
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-incentives-ui-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          helm_timeout: 7m
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-incentives-ui-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "46 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_outdated:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "18 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
